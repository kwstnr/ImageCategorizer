name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          if [ -f "aws/lambda/UserCreate/requirements.txt" ]; then
            pip install -r aws/lambda/UserCreate/requirements.txt -t .
          fi

      - name: Zip Lambda function
        run: zip -r UserCreate_lambda_function.zip ./aws/lambda/UserCreate

      # Step 5: Parse the config file to get layers
      - name: Parse layer config file
        id: parse_layers
        run: |
          layers=$(jq -r '.layers[]' aws/lambda/UserCreate/lambda.config.json)
          echo "Layers to be attached: $layers"
          echo "::set-output name=layers::$layers"

      # Step 6: Get Lambda Layer ARNs (with error handling)
      - name: Get Lambda Layer ARNs
        id: get_layer_arns
        run: |
          layer_arns=""
          for layer in ${{ steps.parse_layers.outputs.layers }}; do
            echo "Fetching ARN for layer: $layer"
            layer_version=$(aws lambda list-layer-versions --layer-name $layer --query 'LayerVersions[0].LayerVersionArn' --output text || echo "Error: Failed to fetch ARN for layer $layer")
            if [ "$layer_version" == "Error: Failed to fetch ARN for layer $layer" ]; then
              echo "$layer_version"
              exit 1
            fi
            echo "Layer ARN for $layer: $layer_version"
            layer_arns="$layer_arns $layer_version"
          done
          echo "::set-output name=layer_arns::$layer_arns"

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.USERCREATE_LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://UserCreate_lambda_function.zip

          # Attach layers to the Lambda function
          aws lambda update-function-configuration \
            --function-name ${{ secrets.USERCREATE_LAMBDA_FUNCTION_NAME }} \
            --layers ${{ steps.get_layer_arns.outputs.layer_arns }}
